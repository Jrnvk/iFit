function [coh] = coherent(self, sq)
      % iFunc_Sqw2D: coherent: compute the coherent scattering cross section from the incoherent and structure factor, in the Skold approximation
      %
      %   coh = coherent(inc)
      %   coh = coherent(inc, sq)
      %
      % compute: iFunc_Sqw2D incoherent S(q,w) + S(q) -> coherent S(q,w)
      %
      % The structure factor 'sq' can be given as a S(q) 1D model. When ommitted
      % the structure factor is modelled from a Percus-Yevick model for hard 
      % spheres (Lennard-Jones). The parameter 'rho' (aka 'eta') ranges from 0 
      % [ideal liquid S(q)=1] to 1 [pure crystalline solid with sharp Bragg peaks].
      % The 'R' parameter corresponds with the mean distance to the first neighbour
      % in a Lennard-Jones potential. 
      % New model parameters are added:
      %       R      Inter-atomic/molecule distance [Angs]
      %       rho    Reduced density [0-1]
      %
      % The Skold approximation is:
      %
      %   Scoh(q,w) = Sinc(q/sqrt(S(q)), w) S(q)
      %
      % The result should be e.g. multiplied by the neutron scattering bound cross 
      % section 'sigma_coh' [barns].
      %
      % Reference: K. Skold, Phys. Rev. Lett. 19, 1023 (1967).
      %
      % Example: s=sqw_diffusion; coh = coherent(s); plot(coh);
      %
      % input:
      %   inc: incoherent Sqw 2D model [iFunc_Sqw2D, q 1st axis (Angs-1), w 2nd axis (meV)].
      %   sq:  S(q)              [ommitted or 1D iFunc]

      % output:
      %   coh: coherent estimate [iFunc_Sqw2D]
      
      sq_iFunc = false; 
      if nargin > 1
        if isa(sq, 'iFunc') && ndims(sq) ==1
          sq_iFunc = true;
        end
      end
      if ~sq_iFunc
        sq = sf_hard_spheres([4 0.4]);
        sq_iFunc = true;
      end
      
      % add parameters and expression
      % the symbol sq.Tag '_s' is generated by the binary op
      coh = [ 'sq=' sq.Tag '_s; x = x./sqrt(abs(sq))' ] + self;  % prepend
      coh = iFunc_Sqw2D(sq.*coh); % this sets Parameters as needed

    end % coherent
